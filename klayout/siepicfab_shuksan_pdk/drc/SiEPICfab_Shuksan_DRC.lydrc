<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>KLayout Design Rule Check (DRC) - SiEPICfab_Shuksan_PDK</description>
 <version/>
 <category>drc</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut>D</shortcut>
 <show-in-menu>true</show-in-menu>
 <group-name/>
 <menu-path>siepic_menu.verification.begin</menu-path>
 <interpreter>dsl</interpreter>
 <dsl-interpreter-name>drc-dsl-xml</dsl-interpreter-name>
 <text># Basic DRC deck for SiEPICfab_Shuksan_PDK
# Lukas Chrostowski, Mustafa Hammood, Jaspreet Jhoja 2021

# Read about DRC scripts in the User Manual under "Design Rule Check (DRC)"
# http://klayout.de/doc/manual/drc_basic.html

report("SiEPICfab_Shuksan_PDK DRC")

# Hierarchical DRC sometimes doesn't catch everything. Flatten first
flat_drc = true

if flat_drc
    # Layers:
    LayerSi=input(1,0).merge
    LayerOxide_open_si = input(6,0).merge
    LayerM1=input(11,0).merge
    LayerM2=input(12,0).merge
    LayerMLOpen=input(13,0).merge
    DevRec=input(68,0).merge
    PinRec=input(1,10).merge
    LayerFP=input(99).merge
else
    # Layers:
    LayerSi=input(1,0)
    LayerOxide_open_si = input(6,0)
    LayerM1=input(11,0)
    LayerM2=input(12,0)
    LayerMLOpen=input(13,0)
    DevRec=input(68,0)
    PinRec=input(1,10)
    LayerFP=input(99)
end


#################
# non-physical checks
#################

# Check device overlaps (functional check)
overlaps = DevRec.merged(2)
output(overlaps, "Devices","Devices cannot be overlapping")

# make sure the devices are within the floor plan layer region;
LayerSi.outside(LayerFP).output("Boundary","devices are out of boundary")

#################
# physical checks
#################

tol = 1e-3  # users typically shoot for exactly the min features
            # for curves, this leads to lots of false errors.

# minimum feature size of Si is 70 nm and minimum exclusion between Si is 70 nm
LayerSi.width(0.07-tol, angle_limit(80)).output("Si_width","Si minimum feature size violation; min 70 nm")
LayerSi.space(0.07-tol, angle_limit(80)).output("Si_space","Si minimum space violation; min 70 nm")

LayerSi.and(LayerOxide_open_si).width(0.3-tol, angle_limit(80)).output("Si_width with oxide open", "Si with oxide open minimum feature size violation; min 300 nm")

# Metal rules based on the metalization process provided by Applied Nanotools, based on contact optical lithography.
# Metal heater, M1
LayerM1.width(3.0-tol, angle_limit(70)).output("M1_width","M1 minimum feature size violation; min 3 µm")
LayerM1.space(3.0-tol).output("M1_space","M1 minimum space violation; min 3 µm")

# Metal routing/contact, M2
LayerM2.width(5.0-tol, angle_limit(70)).output("M2_width","M2 minimum feature size violation; min 5 µm")
LayerM2.space(8.0-tol).output("M2_space","M2 minimum space violation; min 8 µm")

# Metal pad air opening, MLOpen
LayerMLOpen.width(10.0-tol).output("MLOpen_width","MLOpen minimum feature size violation; min 10 µm")
LayerMLOpen.space(10.0-tol).output("MLOpen_space","MLOpen minimum space violation; min 10 µm")

# oxide opening
LayerOxide_open_si.width(10.0-tol).output("Ox_open_si_width", "Oxide open minimum feature size violation; min 10 um")
LayerOxide_open_si.space(10.0-tol).output("Ox_open_si_space", "Oxide open minimum space violation; min 10 um")

# minimum overlap rules:
LayerM2.overlap(LayerM1,3.0-tol).output("M2_M1_overlap","M2 minimum overlap with M1 violation; min 3 µm")
LayerMLOpen.overlap(LayerM2, 10.0-tol).output("MOpen_M2_overlap","MLOpen minimum overlap with M2 violation; min 10 µm")


PinRec.not_inside(LayerSi) # .and(PinRec.not_inside(another_material))
    .output( "SiEPIC-1a" , "Warning: Possible waveguide mismatch or waveguide disconnect: PinRec must enclose only one waveguide material." )

</text>
</klayout-macro>
